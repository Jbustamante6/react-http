{"ast":null,"code":"import _objectSpread from \"/Users/leonardofunez/Documents/reactJS/react-http-ajax/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/leonardofunez/Documents/reactJS/react-http-ajax/src/containers/Blog/Posts/Posts.js\";\nimport React, { Component } from 'react';\nimport axios from '../../../axios';\nimport Post from '../../../components/Post/Post';\n\nclass Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: []\n    };\n\n    this.postSelectedHandler = id => {\n      this.setState({\n        selectedPostID: id\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/posts').then(response => {\n      const posts = response.data.slice(0, 4);\n      const updatePosts = posts.map(post => {\n        return _objectSpread({}, post, {\n          author: 'MAX'\n        });\n      });\n      this.setState({\n        posts: updatePosts\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    let posts = this.state.posts.map(post => {\n      return React.createElement(Post, {\n        key: post.id,\n        title: post.title,\n        author: post.author,\n        clicked: () => this.postSelectedHandler(post.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    });\n    React.createElement(\"section\", {\n      className: \"Posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, posts);\n  }\n\n}\n\nexport default Posts;","map":{"version":3,"sources":["/Users/leonardofunez/Documents/reactJS/react-http-ajax/src/containers/Blog/Posts/Posts.js"],"names":["React","Component","axios","Post","Posts","state","posts","postSelectedHandler","id","setState","selectedPostID","componentDidMount","get","then","response","data","slice","updatePosts","map","post","author","catch","error","console","log","render","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA6B;AAAA;AAAA;AAAA,SACzBI,KADyB,GACjB;AACJC,MAAAA,KAAK,EAAE;AADH,KADiB;;AAAA,SAqBzBC,mBArByB,GAqBFC,EAAD,IAAQ;AAC1B,WAAKC,QAAL,CAAc;AAACC,QAAAA,cAAc,EAAEF;AAAjB,OAAd;AACH,KAvBwB;AAAA;;AAKzBG,EAAAA,iBAAiB,GAAE;AACfT,IAAAA,KAAK,CAACU,GAAN,CAAU,QAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AACd,YAAMR,KAAK,GAAGQ,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAAd;AACA,YAAMC,WAAW,GAAGX,KAAK,CAACY,GAAN,CAAUC,IAAI,IAAI;AAClC,iCACOA,IADP;AAEIC,UAAAA,MAAM,EAAE;AAFZ;AAIH,OALmB,CAApB;AAMA,WAAKX,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAEW;AAAR,OAAd;AACH,KAVD,EAUGI,KAVH,CAUSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAZD;AAaH;;AAKDG,EAAAA,MAAM,GAAE;AACJ,QAAInB,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBY,GAAjB,CAAqBC,IAAI,IAAI;AACrC,aAAO,oBAAC,IAAD;AACH,QAAA,GAAG,EAAEA,IAAI,CAACX,EADP;AAEH,QAAA,KAAK,EAAEW,IAAI,CAACO,KAFT;AAGH,QAAA,MAAM,EAAEP,IAAI,CAACC,MAHV;AAIH,QAAA,OAAO,EAAE,MAAM,KAAKb,mBAAL,CAAyBY,IAAI,CAACX,EAA9B,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAKH,KANW,CAAZ;AAOA;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,KADL;AAGH;;AAnCwB;;AAsC7B,eAAeF,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from '../../../axios';\nimport Post from '../../../components/Post/Post';\n\nclass Posts extends Component{\n    state = { \n        posts: [],\n    }\n\n    componentDidMount(){\n        axios.get('/posts')\n        .then(response => {\n            const posts = response.data.slice(0, 4)\n            const updatePosts = posts.map(post => {\n                return {\n                    ...post,\n                    author: 'MAX'\n                }\n            });\n            this.setState({posts: updatePosts});\n        }).catch(error => {\n            console.log(error)\n        });\n    }\n\n    postSelectedHandler = (id) => {\n        this.setState({selectedPostID: id})\n    }\n    render(){\n        let posts = this.state.posts.map(post => {\n            return <Post \n                key={post.id} \n                title={post.title}\n                author={post.author} \n                clicked={() => this.postSelectedHandler(post.id)}/>;\n        });\n        <section className=\"Posts\">\n            {posts}\n        </section>\n    }\n}\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}